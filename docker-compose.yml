services:
  api1: &api
    build: .
    environment:
      - NODE_ENV=production
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - INSTANCE_ID=API-1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '70MB'

  api2:
    <<: *api
    environment:
      - NODE_ENV=production
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - INSTANCE_ID=API-2
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '70MB'
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=rinha
      - POSTGRES_USER=rinha
      - POSTGRES_PASSWORD=rinha
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U rinha -d rinha']
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 35s
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '195MB'

  nginx:
    image: nginx:alpine
    ports:
      - '9999:9999'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '15MB'

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
